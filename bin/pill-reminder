#!/usr/bin/env node

var TelegramBot = require('node-telegram-bot-api');
var mongoose = require('mongoose');
var Models = require('../database/models/models');

console.log('Executando scheduled job');

var bot = new TelegramBot(process.env.TELEGRAM_BOT_TOKEN);
var db = mongoose.connection;

db.on('error', console.error);
db.once('open', function () {
  console.log('Executando task');

  Models.PillReminder.find(function (err, docs) {
    console.log('Find executado. Obj de retorno do find: ', docs);
    docs.forEach(function (doc) {
      try {
        if(doc.manualPause){
          console.log('Serviço em pausa manual, não enviando mensagem.', doc);
          return;
        }

        if (doc.daysInPause == 8) {
          doc.update({ daysInPause: 0, days: 0, pause: false }).exec();
          bot.sendMessage(doc.chatId, doc.userName + ', hoje foi seu última dia de pausa. Amanhã você voltará a receber as notificações.').then(function () { })
          return;
        }

        if (doc.pause) {
          console.log('Serviço em pausa automática, não enviando mensagem.', doc);
          doc.daysInPause = doc.daysInPause + 1;
          doc.update({ daysInPause: doc.daysInPause }).exec();
        } else {
          console.log('Enviando mensagem: ', doc);
          doc.days = doc.days + 1;
          doc.update({ days: doc.days }).exec();
          bot.sendMessage(doc.chatId, doc.alertMessage ? doc.alertMessage : process.env.TELEGRAM_BOT_MESSAGE).then(function () { })

          if (doc.days == 21) {
            doc.update({ answeredCallBackQuery: false }).exec();
            bot.sendMessage(doc.chatId, doc.userName + ', você chegou ao último dia! Deseja fazer a pausa ou emendar a outra cartela?', {
              reply_markup: JSON.stringify({
                inline_keyboard: [
                  [{ text: 'Emendar', callback_data: '01-Emendar' }],
                  [{ text: 'Pausar', callback_data: '02-Pausar' }]
                ]
              })
            }).then(function (messageSent) { })
          }
        }
      } catch (error) {
        console.error('Ocorreu um erro ao processar o documento: ', doc, error);
      }
    });
  });
});

mongoose.connect(process.env.MONGOLAB_URI);
