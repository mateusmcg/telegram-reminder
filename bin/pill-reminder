#!/usr/bin/env node

var TelegramBot = require('node-telegram-bot-api');
var mongoose = require('mongoose');
var Models = require('../database/models/models');
var async = require('async');

console.log('Executando scheduled job');

var bot = new TelegramBot(process.env.TELEGRAM_BOT_TOKEN);
var db = mongoose.connection;

db.on('error', console.error);
db.once('open', function () {
  console.log('Executando task');

  Models.PillReminder.update({ loop: true }, { tookThePill: false }, {}, function (err, result) { });
  Models.PillReminder.find(function (err, docs) {
    console.log('Find executado. Obj de retorno do find: ', docs);
    async.each(docs, function (doc, callback) {
      console.log('Enviando mensagem: ', doc);
      bot.sendMessage(parseInt(doc.chatId), doc.alertMessage ? doc.alertMessage : process.env.TELEGRAM_BOT_MESSAGE).then(function () {
        console.log('Mensagem enviada');
        callback();
      });

      keepSendingMessageAsync()

    }, function (err) {
      if (err) {
        console.log('Erro ao enviar msg: ', err);
      } else {
        console.log('All files have been processed successfully');
      }
    });
  });
});

function keepSendingMessageAsync() {
  var fiveMinutes = 60000 * 5;
  console.log('Irei te lembrar daqui 5 minutos');
  setTimeout(function () {
    console.log('Soneca acionada');
    Models.PillReminder.where({ loop: true, tookThePill: false }).find(function (err, docs) {
      if (!docs || docs.length == 0) {
        process.exit();
      } else {
        docs.forEach(function (doc) {
          bot.sendMessage(parseInt(doc.chatId), doc.alertMessage ? doc.alertMessage : process.env.TELEGRAM_BOT_MESSAGE).then(function () {
            console.log('Mensagem soneca enviada');
          });
        });
        keepSendingMessageAsync();
      }
    });
  }, fiveMinutes);
}

mongoose.connect(process.env.MONGOLAB_URI);
